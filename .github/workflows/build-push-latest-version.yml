name: build-push-latest-version
on:
  workflow_dispatch:
  schedule:
    - cron: "30 6 5 * *" # Run monthly
  push:
    paths-ignore:
      - README.md
      - LICENSE
      - docker-compose.yml
      - .github/workflows/build-push-all-versions.yml
    branches:
      - master

jobs:
  provide_matrix:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.version_provider.outputs.version}}
    steps:
      - name: Install curl and jq
        run: sudo apt-get install -y curl jq
      - name: Install gather Azure Devops Agent versions from API
        id: version_provider
        run: |
          VERSION=$(curl -fsSN \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/microsoft/azure-pipelines-agent/releases?per_page=100" |
            jq -r '.[] | select(.prerelease==false) | .name ' |
            head -n 1 |
            cut -d 'v' -f2)
          echo "::set-output name=version::[\"${VERSION}\"]"
      - name: debug
        run: |
          echo "::debug ${{steps.version_provider.outputs.version}}"
      - name: debug2
        run: |
          echo "${{steps.version_provider.outputs.version}}" | jq -r

  bake-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            dcagatay/azp-agent-dind:latest
            dcagatay/azp-agent-dind:${{ matrix.version }}
          build-args: |
            AGENT_VERSION=${{ matrix.version }}

    strategy:
      matrix:
        version: ${{fromJson(needs.provide_matrix.outputs.version)}}

  # bake-latest:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Install curl and jq
  #       run: sudo apt-get install -y curl jq
  #     - name: Install gather Azure Devops Agent versions from API
  #       id: version_provider
  #       run: |
  #         VERSION=$(curl -fsSN \
  #           -H "Accept: application/vnd.github.v3+json" \
  #           "https://api.github.com/repos/microsoft/azure-pipelines-agent/releases?per_page=2" |
  #           jq -r '.[] | select(.prerelease==false) | .name ' |
  #           cut -d 'v' -f2)
  #         echo "::set-output name=version::$VERSION"
  #     - name: debug
  #       run: |
  #         echo "::debug:: ${{steps.version_provider.outputs.version}}"

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         tags: |
  #           dcagatay/azp-agent-dind:latest
  #           dcagatay/azp-agent-dind:${{steps.version_provider.outputs.version}}
  #         build-args: |
  #           AGENT_VERSION=${{steps.version_provider.outputs.version}}
