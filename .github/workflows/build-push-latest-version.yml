name: build-push-latest-version
on:
  schedule:
    - cron: "30 6 5 * *" # Run monthly
  push:
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "docker-compose.yml"
    branches:
      - master

jobs:
  provide_matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install curl and jq
        run: sudo apt-get install -y curl jq
      - name: Install gather Azure Devops Agent versions from API
        run: |
          echo '{"version": '$(NUM_RELEASES=2 ./check-agent-releases.sh | jq  --raw-input . | jq --slurp -c . )'}' > versions.txt
          cat ./versions.txt
      - id: output_data
        run: echo "::set-output name=matrix::$(cat ./versions.txt)"
    # this step is needed, so the output gets to the next defined job
    outputs:
      matrix: ${{ steps.output_data.outputs.matrix }}

  bake-latest:
    runs-on: ubuntu-latest
    steps:
      - name: AAAAAA
        run: echo ${{needs.provide_matrix.outputs.matrix}}
      - name: BBBBBB
        run: echo ${{fromJson(needs.provide_matrix.outputs.matrix)}}
      # - name: Checkout
      #   uses: actions/checkout@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push latest
      #   uses: docker/bake-action@master
      #   with:
      #     targets: latest,version
      #     push: true
      #   env:
      #     AGENT_VERSION: ${{ matrix.version }}

    # strategy:
    #   # matrix:
    #   #   version:
    #   #     - 2.200.2
    #   matrix: ${{fromJson(needs.provide_matrix.outputs.matrix)}}
